{"version":3,"sources":["com/fulcrologic/fulcro/inspect/element_picker.cljc"],"mappings":"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","names":["com.fulcrologic.fulcro.inspect.element-picker/base-me-style","com.fulcrologic.fulcro.inspect.element-picker/base-ml-style","com.fulcrologic.fulcro.inspect.element-picker/me-style","style","result","com.fulcrologic.fulcro.inspect.element_picker.goog$module$goog$object.extend","com.fulcrologic.fulcro.inspect.element-picker/ml-style","com.fulcrologic.fulcro.inspect.element-picker/marker-element","id","or__4253__auto__","js/document.getElementById","G__57305","js/document.createElement","com.fulcrologic.fulcro.inspect.element_picker.goog$module$goog$object.set","goog.dom/appendChild","js/document.body","com.fulcrologic.fulcro.inspect.element-picker/marker-label-element","G__57310","com.fulcrologic.fulcro.inspect.element-picker/react-raw-instance","node","temp__5751__auto__","instance-key","com.fulcrologic.fulcro.inspect.element_picker.goog$module$goog$object.getKeys","p1__57311#","cljs.core.filter","clojure.string/starts-with?","cljs.core/first","com.fulcrologic.fulcro.inspect.element_picker.goog$module$goog$object.get","com.fulcrologic.fulcro.inspect.element-picker/react-instance","raw","instance","com.fulcrologic.fulcro.inspect.element_picker.goog$module$goog$object.getValueByKeys","cljs.core._EQ_","com.fulcrologic.fulcro.react.error-boundaries/BodyContainer","p__57320","map__57321","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.inspect.element-picker/pick-element","on-pick","cljs.core/identity","marker","marker-label","current","cljs.core.atom","over-handler","e","target","G__57326","com.fulcrologic.fulcro.components/component-instance?","cljs.core/reset!","goog.dom/setTextContent","com.fulcrologic.fulcro.components/component-name","target'","js/module$node_modules$react_dom$index.findDOMNode","offset","goog.style/getPageOffset","size","goog.style/getSize","goog.style/setStyle","goog.dom/getParentElement","pick-handler","G__57327","cljs.core/deref","js/removeEventListener","self","js/addEventListener","js/setTimeout","com.fulcrologic.fulcro.inspect.element-picker/inspect-component","comp","state-map","G__57329","com.fulcrologic.fulcro.components/any->app","com.fulcrologic.fulcro.components/props","e57332","com.fulcrologic.fulcro.components/get-ident","_","e57333","G__57334","com.fulcrologic.fulcro.components/react-type","com.fulcrologic.fulcro.components.get_query","e57335","G__57336","com.fulcrologic.fulcro.inspect.element-picker/install!","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","com.fulcrologic.fulcro.inspect.inspect-client/run-picker","data","map__57339","app-uuid","details","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_","cljs.core.apply","cljs.core/array-map"],"sourcesContent":["(ns com.fulcrologic.fulcro.inspect.element-picker\n  (:require\n    [clojure.string :as str]\n    #?@(:cljs [[goog.object :as gobj]\n               [goog.dom :as gdom]\n               [goog.style :as gstyle]])\n    [taoensso.timbre :as log]\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.inspect.inspect-client :as inspect]\n    [com.fulcrologic.fulcro.react.error-boundaries :as eb]\n    [\"react-dom\" :as react.dom]))\n\n(def base-me-style #js {:position       \"absolute\"\n                        :display        \"block\"\n                        :background     \"rgba(67, 132, 208, 0.5)\"\n                        :pointer-events \"none\"\n                        :overflow       \"hidden\"\n                        :color          \"#fff\"\n                        :padding        \"3px 5px\"\n                        :box-sizing     \"border-box\"\n                        :font-family    \"monospace\"\n                        :font-size      \"12px\"\n                        :z-index        \"999999\"})\n\n(def base-ml-style #js {:position       \"absolute\"\n                        :display        \"block\"\n                        :pointer-events \"none\"\n                        :box-sizing     \"border-box\"\n                        :font-family    \"sans-serif\"\n                        :font-size      \"10px\"\n                        :z-index        \"999999\"\n                        :background     \"#333740\"\n                        :border-radius  \"3px\"\n                        :padding        \"6px 8px\"\n                        :color          \"#ffab66\"\n                        :font-weight    \"bold\"\n                        :white-space    \"nowrap\"})\n\n(defn me-style [style]\n  #?(:cljs\n     (let [result (js-obj)]\n       (gobj/extend result base-me-style style)\n       result)))\n\n(defn ml-style [style]\n  #?(:cljs\n     (let [result (js-obj)]\n       (gobj/extend result base-ml-style style)\n       result)))\n\n(defn marker-element []\n  (let [id \"__fulcro_inspect_marker\"]\n    #?(:cljs\n       (or (js/document.getElementById id)\n         (doto (js/document.createElement \"div\")\n           (gobj/set \"id\" id)\n           (->> (gdom/appendChild js/document.body)))))))\n\n(defn marker-label-element []\n  (let [id \"__fulcro_inspect_marker_label\"]\n    #?(:cljs\n       (or (js/document.getElementById id)\n         (doto (js/document.createElement \"div\")\n           (gobj/set \"id\" id)\n           (->> (gdom/appendChild js/document.body)))))))\n\n(defn react-raw-instance [node]\n  #?(:cljs\n     (if-let [instance-key (->> (gobj/getKeys node)\n                                (filter #(or (str/starts-with? % \"__reactInternalInstance$\")\n                                             (str/starts-with? % \"__reactFiber$\")))\n                                (first))]\n       (gobj/get node instance-key))))\n\n(defn react-instance [node]\n  #?(:cljs\n     (if-let [raw (react-raw-instance node)]\n       (let [instance (or (gobj/getValueByKeys raw \"_currentElement\" \"_owner\" \"_instance\") ; react < 16\n                       (gobj/getValueByKeys raw \"return\" \"stateNode\") ; react >= 16\n                       )]\n         ;; (React >= 16): If component body is wrapped in eb/error-boundary then we need to reach 2 levels deeper,\n         ;; through eb/BodyContainer and eb/ErrorBoundary to get at the actual component\n         (if (and (nil? instance) (= (gobj/getValueByKeys raw \"return\" \"type\") eb/BodyContainer))\n           (gobj/getValueByKeys raw \"return\" \"return\" \"return\" \"stateNode\")\n           instance)))))\n\n(defn pick-element [{:keys [on-pick]\n                     :or   {on-pick identity}}]\n  #?(:cljs\n     (let [marker       (marker-element)\n           marker-label (marker-label-element)\n           current      (atom nil)\n           over-handler (fn [e]\n                          (let [target (.-target e)]\n                            (loop [target target]\n                              (if target\n                                (let [instance (some-> target react-instance)]\n                                  (if (comp/component-instance? instance)\n                                    (do\n                                      (.stopPropagation e)\n                                      (reset! current instance)\n                                      (gdom/setTextContent marker-label (comp/component-name instance))\n\n                                      (let [target' (react.dom/findDOMNode instance)\n                                            offset  (gstyle/getPageOffset target')\n                                            size    (gstyle/getSize target')]\n                                        (gstyle/setStyle marker-label\n                                          (ml-style #js {:left (str (.-x offset) \"px\")\n                                                         :top  (str (- (.-y offset) 36) \"px\")}))\n\n                                        (gstyle/setStyle marker\n                                          (me-style #js {:width  (str (.-width size) \"px\")\n                                                         :height (str (.-height size) \"px\")\n                                                         :left   (str (.-x offset) \"px\")\n                                                         :top    (str (.-y offset) \"px\")}))))\n                                    (recur (gdom/getParentElement target))))))))\n           pick-handler (fn self []\n                          (on-pick @current)\n\n                          (gstyle/setStyle marker #js {:display \"none\"})\n                          (gstyle/setStyle marker-label #js {:display \"none\"})\n\n                          (js/removeEventListener \"click\" self)\n                          (js/removeEventListener \"mouseover\" over-handler))]\n\n       (gstyle/setStyle marker (me-style #js {:display \"block\"\n                                              :top     \"-100000px\"\n                                              :left    \"-100000px\"}))\n\n       (gstyle/setStyle marker-label (ml-style #js {:display \"block\"\n                                                    :top     \"-100000px\"\n                                                    :left    \"-100000px\"}))\n\n       (js/addEventListener \"mouseover\" over-handler)\n\n       (js/setTimeout\n         #(js/addEventListener \"click\" pick-handler)\n         10))))\n\n\n(defn inspect-component [comp]\n  #?(:cljs\n     (let [state-map (some-> (comp/any->app comp) :com.fulcrologic.fulcro.application/state-atom deref)]\n       {:fulcro.inspect.ui.element/display-name (comp/component-name comp)\n        :fulcro.inspect.ui.element/props        (comp/props comp)\n        :fulcro.inspect.ui.element/ident        (try\n                                                  (comp/get-ident comp)\n                                                  (catch :default _ nil))\n        :fulcro.inspect.ui.element/static-query (try\n                                                  (some-> comp comp/react-type comp/get-query)\n                                                  (catch :default _ nil))\n        :fulcro.inspect.ui.element/query        (try\n                                                  (some-> comp comp/react-type (comp/get-query state-map))\n                                                  (catch :default _ nil))})))\n\n(defn install!\n  \"Install element picker support.\"\n  []\n  (log/info \"Installing Inspect Element Picker\")\n  (reset! inspect/run-picker\n    (fn [data]\n      (let [{:fulcro.inspect.core/keys [app-uuid]} data]\n        (pick-element\n          {:fulcro.inspect.core/app-uuid\n           app-uuid\n           :on-pick\n           (fn [comp]\n             (if comp\n               (let [details (inspect-component comp)]\n                 (inspect/transact-inspector! [:fulcro.inspect.ui.element/panel-id\n                                               [:fulcro.inspect.core/app-uuid app-uuid]]\n                   [`(fulcro.inspect.ui.element/set-element ~details)]))\n               (inspect/transact-inspector! [:fulcro.inspect.ui.element/panel-id\n                                             [:fulcro.inspect.core/app-uuid app-uuid]]\n                 [`(fulcro.client.mutations/set-props {:ui/picking? false})])))}))))\n  true)"]}