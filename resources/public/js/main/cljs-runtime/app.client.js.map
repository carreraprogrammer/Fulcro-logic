{"version":3,"sources":["app/client.cljs"],"mappings":";AAOA,GAAA,QAAAA,gCAAAC,uCAAAC;AAAA;AAAA,AAAA,AAASC,iBAAI,AAACC;;AAGd,AAAA,AAAA;AAAA,IAAAC,+BAAA,2CAAA,0DAAA,mCAAekB;AAAf,AAAA,OAAAjB,uDAAA,NAAeiB;AAAf,AAAA,IAAAhB,aAAA,CAAAC,wEAAAA,+EAAAA,TAAee,2DAAAA;IAAfhB,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEAAmCiB;UAAnC,AAAAd,4CAAAH,eAAA,jEAAwCkB;AAAxC,AACE,OAAAC,8EAAA,MAAA,6VAAA,1QACE,AAAAC,sDAAA,CAAA,IAAA,KAAA,SAAA,AAAAC,iDAAgBJ,QAChB,AAAAG,sDAAA,CAAA,IAAA,KAAA,QAAA,AAAAC,iDAAeH;;;AAHnB,AAAA,GAAA,QAAAzB,gCAAAC,uCAAAU;AAAA;AAAA,AAAA;;;oBAAA,4BAAAC,hDAAOU;AAAP,AAAA,IAAAT,sBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAAJ,4CAAAL,6BAAA;AAAA,AAAA,oBAAAS;AAAA,IAAAC,kCAAAD;AAAA,AAAA,CAAA,AAAAD,4BAAA,iBAAAG,WAAA,EAAA,eAAA,iBAAAC,WAAAJ;IAAAK,WAAA,CAAAC,yEAAAA,uEAAAP,qBAAA,kBAAAO,mDAAAP,qBAAA;AAAA,AAAA,QAAAG,gEAAAA,8DAAAE,SAAAC,YAAAH,0CAAAE,SAAAC;;AAAA,AAAAF;;;AAAA,CAAA,AAAAH,4BAAA,iBAAAO,WAAA,EAAA,eAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAC,8EAAA,4EAAAhB,9FAAOiB;AAKP,AAAKO,uBAAU,AAACC,wEAAaR;AAE7B,AAAA,AAAA;AAAA,IAAAjB,+BAAA,2CAAA,0DAAA,iCAAakB;AAAb,AAAA,OAAAjB,uDAAA,NAAaiB;AAAb,AAAA,YAAA,CAAAf,wEAAAA,+EAAAA,TAAae,2DAAAA,lNAAKc;AAAlB,AACE,OAAAX,8EAAA,MAAA,mFACE,iBAAAY,WAAA,2CAAA,+DAAA,SAAA,6DAAA;AAAA,AAAA,gHAAAA,2CAAAA,nJAACT,qDAAAA,+DAAAA;aADH;;;AADF,AAAA,GAAA,QAAA7B,gCAAAC,uCAAA8B;AAAA;AAAA,AAAA;;;kBAAA,0BAAAnB,5CAAOwB;AAAP,AAAA,IAAAvB,sBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAAJ,4CAAAL,6BAAA;AAAA,AAAA,oBAAAS;AAAA,IAAAC,kCAAAD;AAAA,AAAA,CAAA,AAAAD,4BAAA,iBAAAmB,WAAA,EAAA,eAAA,iBAAAC,WAAApB;IAAAqB,WAAA,CAAAf,yEAAAA,uEAAAP,qBAAA,kBAAAO,mDAAAP,qBAAA;AAAA,AAAA,QAAAG,gEAAAA,8DAAAkB,SAAAC,YAAAnB,0CAAAkB,SAAAC;;AAAA,AAAAF;;;AAAA,CAAA,AAAAnB,4BAAA,iBAAAsB,WAAA,EAAA,eAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAd,4EAAA,wEAAAhB,xFAAO+B;AAIP;;;kBAAA,lBAAeG;AAAf,AAGE,4GAAA,5GAACC,6EAAWrC,eAAIiC;;AAChB,mBAAA,ZAACK;;;AAEH;;;qBAAA,rBAAeC;AAAf,AAIE,4GAAA,5GAACF,6EAAWrC,eAAIiC;;AAEhB,AAACO,8FAA8BxC;;AAC/B,mBAAA,ZAACsC","names":["js/app","js/app.client","js/app.client.app","app.client/app","com.fulcrologic.fulcro.application.fulcro_app","options__48898__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__52936","com.fulcrologic.fulcro.components/props","cljs.core/--destructure-map","cljs.core.get","js/app.client.Person","props__48899__auto__","this__48900__auto__","temp__5751__auto__","init-state__48901__auto__","obj52938","G__52939","G__52940","com.fulcrologic.fulcro.components/isoget","obj52942","com.fulcrologic.fulcro.components/configure-component!","app.client/Person","this","name","age","com.fulcrologic.fulcro.dom.macro_create_element","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","app.client/ui-person","com.fulcrologic.fulcro.components.factory","js/app.client.Root","obj52945","G__52946","G__52947","obj52949","app.client/Root","props","G__52943","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_","js/console.log","app.client/refresh","com.fulcrologic.fulcro.components.refresh_dynamic_queries_BANG_"],"sourcesContent":["(ns app.client\r\n  (:require\r\n    [com.fulcrologic.fulcro.application :as app]\r\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\r\n    [com.fulcrologic.fulcro.dom :as dom]\r\n    ))\r\n\r\n(defonce app (app/fulcro-app))\r\n\r\n\r\n(defsc Person [this {:person/keys [name age]}]\r\n  (dom/div\r\n    (dom/p \"Name: \" name)\r\n    (dom/p \"Age: \" age)))\r\n\r\n(def ui-person (comp/factory Person))\r\n\r\n(defsc Root [this props]\r\n  (dom/div\r\n    (ui-person {:person/name \"Daniel\" :person/age 22})))\r\n\r\n(defn ^:export init\r\n  \"Shadow-cljs sets this up to be our entry-point function. See shadow-cljs.edn `:init-fn` in the modules of the main build.\"\r\n  []\r\n  (app/mount! app Root \"app\")\r\n  (js/console.log \"Loaded\"))\r\n\r\n(defn ^:export refresh\r\n  \"During development, shadow-cljs will call this on every hot reload of source. See shadow-cljs.edn\"\r\n  []\r\n  ;; re-mounting will cause forced UI refresh, update internals, etc.\r\n  (app/mount! app Root \"app\")\r\n  ;; As of Fulcro 3.3.0, this addition will help with stale queries when using dynamic routing:\r\n  (comp/refresh-dynamic-queries! app)\r\n  (js/console.log \"Hot reload\"))\r\n"]}