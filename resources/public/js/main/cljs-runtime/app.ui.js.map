{"version":3,"sources":["app/ui.cljs"],"mappings":"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","names":["options__48968__auto__","p__52320","map__52321","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.components/wrapped-render","map__52322","com.fulcrologic.fulcro.components/props","js/app","js/app.ui","js/app.ui.Person","props__48969__auto__","this__48970__auto__","temp__5751__auto__","init-state__48971__auto__","obj52324","G__52325","G__52326","com.fulcrologic.fulcro.components/isoget","obj52328","com.fulcrologic.fulcro.components/configure-component!","app.ui/Person","this","name","age","params","com.fulcrologic.fulcro.dom.macro_create_element","app.ui/ui-person","com.fulcrologic.fulcro.components.factory","p__52329","map__52330","map__52339","js/app.ui.PersonList","obj52341","G__52342","G__52343","obj52345","app.ui/PersonList","label","people","com.fulcrologic.fulcro.components.get_query","cljs.core._EQ_","G__52331","G__52332","com.fulcrologic.fulcro.components/get-initial-state","G__52333","G__52334","G__52335","G__52336","G__52337","G__52338","cljs.core.map","app.ui/ui-person-list","map__52350","js/app.ui.Root","obj52352","G__52353","G__52354","obj52356","app.ui/Root","friends","enemies","G__52346","G__52347","G__52348","G__52349"],"sourcesContent":["(ns app.ui\r\n  (:require\r\n    [com.fulcrologic.fulcro.dom :as dom]\r\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]))\r\n\r\n(defsc Person [this {:person/keys [name age]}]\r\n  {:query         [:person/name :person/age]\r\n   :initial-state (fn [{:keys [name age] :as params}] {:person/name name :person/age age})}\r\n  (dom/li\r\n    (dom/h5 (str name \"(age: \" age \")\"))))\r\n\r\n(def ui-person (comp/factory Person {:keyfn :person/name}))\r\n\r\n(defsc PersonList [this {:keys [list/label list/people]}]\r\n  {:query [:list/label {:list/people (comp/get-query Person)}]\r\n   :initial-state\r\n   (fn [{:keys [label]}]\r\n     {:list/label  label\r\n      :list/people (if (= label \"Friends\")\r\n                     [(comp/get-initial-state Person {:name \"Sally\" :age 32})\r\n                      (comp/get-initial-state Person {:name \"Joe\" :age 22})]\r\n                     [(comp/get-initial-state Person {:name \"Fred\" :age 11})\r\n                      (comp/get-initial-state Person {:name \"Bobby\" :age 55})])})}\r\n  (dom/div\r\n    (dom/h4 label)\r\n    (dom/ul\r\n      (map ui-person people))))\r\n\r\n(def ui-person-list (comp/factory PersonList))\r\n\r\n; Root's initial state becomes the entire app's initial state!\r\n(defsc Root [this {:keys [friends enemies]}]\r\n  {:query         [{:friends (comp/get-query PersonList)}\r\n                   {:enemies (comp/get-query PersonList)}]\r\n   :initial-state (fn [params] {:friends (comp/get-initial-state PersonList {:label \"Friends\"})\r\n                                :enemies (comp/get-initial-state PersonList {:label \"Enemies\"})})}\r\n  (dom/div\r\n    (ui-person-list friends)\r\n    (ui-person-list enemies)))"]}