{"version":3,"sources":["app/ui.cljs"],"mappings":"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","names":["options__45787__auto__","p__49060","map__49061","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.components/wrapped-render","map__49062","com.fulcrologic.fulcro.components/props","js/app","js/app.ui","js/app.ui.Person","props__45788__auto__","this__45789__auto__","temp__5751__auto__","init-state__45790__auto__","obj49064","G__49065","G__49066","com.fulcrologic.fulcro.components/isoget","obj49068","com.fulcrologic.fulcro.components/configure-component!","app.ui/Person","this","name","age","params","com.fulcrologic.fulcro.dom.macro_create_element","app.ui/ui-person","com.fulcrologic.fulcro.components.factory","p__49069","map__49070","map__49079","js/app.ui.PersonList","obj49081","G__49082","G__49083","obj49085","app.ui/PersonList","label","people","cljs.core._EQ_","G__49071","G__49072","com.fulcrologic.fulcro.components/get-initial-state","G__49073","G__49074","G__49075","G__49076","G__49077","G__49078","cljs.core.map","app.ui/ui-person-list","map__49090","js/app.ui.Root","obj49092","G__49093","G__49094","obj49096","app.ui/Root","friends","enemies","G__49086","G__49087","G__49088","G__49089"],"sourcesContent":["(ns app.ui\r\n  (:require\r\n    [com.fulcrologic.fulcro.dom :as dom]\r\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]))\r\n\r\n(defsc Person [this {:person/keys [name age]}]\r\n  {:initial-state (fn [{:keys [name age] :as params}] {:person/name name :person/age age}) }\r\n  (dom/li\r\n    (dom/h5 (str name \"(age: \" age \")\"))))\r\n\r\n(def ui-person (comp/factory Person {:keyfn :person/name}))\r\n\r\n(defsc PersonList [this {:list/keys [label people]}]\r\n  {:initial-state\r\n   (fn [{:keys [label]}]\r\n     {:list/label  label\r\n      :list/people (if (= label \"Friends\")\r\n                     [(comp/get-initial-state Person {:name \"Sally\" :age 32}) ; Here, with comp/get-initial-state, we are defining the initial state of Person, that is gonna be taken at the moment of create an instance of the component, avoiding to search in a big map and improve the time of research\r\n                      (comp/get-initial-state Person {:name \"Joe\" :age 22})]\r\n                     [(comp/get-initial-state Person {:name \"Fred\" :age 11})\r\n                      (comp/get-initial-state Person {:name \"Bobby\" :age 55})])})}\r\n  (dom/div\r\n    (dom/h4 label)\r\n    (dom/ul\r\n      (map ui-person people))))\r\n\r\n(def ui-person-list (comp/factory PersonList))\r\n\r\n; Root's initial state becomes the entire app's initial state!\r\n(defsc Root [this {:keys [friends enemies]}]\r\n  {:initial-state (fn [params] {:friends (comp/get-initial-state PersonList {:label \"Friends\"})\r\n                                :enemies (comp/get-initial-state PersonList {:label \"Enemies\"})}) }\r\n  (dom/div\r\n    (ui-person-list friends)\r\n    (ui-person-list enemies)))"]}